# ===========================================
# Poetry 프로젝트 설정 파일 (pyproject.toml)
# ===========================================
# 이 파일은 Poetry 패키지 매니저를 사용하여 Python 프로젝트의 의존성을 관리합니다.
# Poetry는 pip와 requirements.txt보다 더 강력한 의존성 관리 기능을 제공합니다.
#
# 주요 기능:
#   - 의존성 버전 고정 및 호환성 관리
#   - 가상환경 자동 생성 및 관리
#   - 패키지 빌드 및 배포 지원
#   - 개발용 의존성과 프로덕션 의존성 분리
#
# 사용법:
#   poetry install          # 의존성 설치
#   poetry add <package>    # 새 패키지 추가
#   poetry remove <package> # 패키지 제거
#   poetry update           # 의존성 업데이트
#   poetry show             # 설치된 패키지 목록

# ===========================================
# 프로젝트 메타데이터
# ===========================================
[tool.poetry]
# 프로젝트 이름 (PyPI에 업로드할 때 사용)
name = "book-intro-api"

# 프로젝트 버전 (시맨틱 버전닝: major.minor.patch)
version = "1.0.0"

# 프로젝트 설명 (짧은 한 줄 설명)
description = "Book Introduction API with FastAPI"

# 프로젝트 작성자 정보 (이메일 형식 권장)
authors = ["nookxcite.mirz <nookxcite.mirz@gmail.com>"]

# README 파일 (현재 없으므로 주석 처리)
# readme = "README.md"

# 패키지 설정 (api 폴더를 패키지로 포함)
packages = [{include = "api"}]

# ===========================================
# 프로덕션 의존성 (실제 서비스에 필요한 패키지들)
# ===========================================
[tool.poetry.dependencies]
# Python 버전 요구사항 (^3.12 = 3.12.0 이상 4.0.0 미만)
python = "^3.12"

# FastAPI 웹 프레임워크 (최신 안정 버전)
fastapi = "^0.104.1"

# Uvicorn ASGI 서버 (FastAPI의 공식 서버)
# extras = ["standard"]: 추가 기능들 포함 (자동 재시작, 로깅 등)
uvicorn = {extras = ["standard"], version = "^0.24.0"}

# ===========================================
# 개발용 의존성 (개발/테스트 시에만 필요한 패키지들)
# ===========================================
[tool.poetry.group.dev.dependencies]
# 개발용 패키지들을 여기에 추가할 수 있습니다
# 예시:
# pytest = "^7.0.0"        # 테스트 프레임워크
# black = "^23.0.0"         # 코드 포매터
# flake8 = "^6.0.0"         # 린터
# mypy = "^1.0.0"           # 타입 체커

# ===========================================
# 빌드 시스템 설정
# ===========================================
[build-system]
# 빌드에 필요한 패키지들
requires = ["poetry-core"]

# 빌드 백엔드 (Poetry의 빌드 시스템 사용)
build-backend = "poetry.core.masonry.api"
